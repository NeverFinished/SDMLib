[
  {
    "id":"KE.K237",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"Project",
      "phase":"active",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":10,
      "hoursSpend":20,
      "subentries":[
        {"id":"KE.K238"},
        {"id":"KE.K240"},
        {"id":"KE.K245"},
        {"id":"KE.K248"},
        {"id":"KE.K256"},
        {"id":"KE.K268"}
      ],
      "logEntries":[
        {"id":"KE.L244"},
        {"id":"KE.L255"},
        {"id":"KE.L267"},
        {"id":"KE.L271"}
      ]
    }
  },
  {
    "id":"KE.K238",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"LudoModel",
      "phase":"backlog",
      "lastDeveloper":"zuendorf",
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L239"}
      ]
    }
  },
  {
    "id":"KE.K240",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"StudyRightReverseClassModel",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursSpend":1,
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L241"},
        {"id":"KE.L242"},
        {"id":"KE.L243"}
      ]
    }
  },
  {
    "id":"KE.K245",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"StudyRightExtendsReverseClassModel",
      "phase":"backlog",
      "lastDeveloper":"ajahl",
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L246"},
        {"id":"KE.L247"}
      ]
    }
  },
  {
    "id":"KE.K248",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"StudyRightObjectScenarios",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":10,
      "hoursSpend":6,
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L249"},
        {"id":"KE.L250"},
        {"id":"KE.L251"},
        {"id":"KE.L252"},
        {"id":"KE.L253"},
        {"id":"KE.L254"}
      ]
    }
  },
  {
    "id":"KE.K256",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"StudyRightClassesCodeGen",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursSpend":12,
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L257"},
        {"id":"KE.L258"},
        {"id":"KE.L259"},
        {"id":"KE.L260"},
        {"id":"KE.L261"},
        {"id":"KE.L262"},
        {"id":"KE.L263"},
        {"id":"KE.L264"},
        {"id":"KE.L265"},
        {"id":"KE.L266"}
      ]
    }
  },
  {
    "id":"KE.K268",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"StudyRightOneToOneAssoc",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursSpend":1,
      "parent":{"id":"KE.K237"},
      "logEntries":[
        {"id":"KE.L269"},
        {"id":"KE.L270"}
      ]
    }
  },
  {
    "id":"KE.L239",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K238"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L241",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K240"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L242",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"02.04.2012 14:58:18",
      "kanbanEntry":{"id":"KE.K240"},
      "developer":"ajahl",
      "phase":"backlog",
      "comment":"Achieved: Start situation: There are some java files. We parse them and generate a class model: "
    }
  },
  {
    "id":"KE.L243",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K240"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Bug: running the test multiple times inserts the code multiple times \nBug solved: there was no bug, there were just two classes with the same name in different packages. \nHm, might be added to future work. "
    }
  },
  {
    "id":"KE.L244",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K237"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"LudoModel: null"
    }
  },
  {
    "id":"KE.L246",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K245"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L247",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"02.04.2012 14:58:18",
      "kanbanEntry":{"id":"KE.K245"},
      "developer":"ajahl",
      "phase":"backlog",
      "comment":"Achieved: Start situation: There are some java files. We parse them and generate a class model: "
    }
  },
  {
    "id":"KE.L249",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L250",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 21:37:46",
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf",
      "phase":"backlog",
      "comment":"Achieved: Start situation: use University class to build object structure"
    }
  },
  {
    "id":"KE.L251",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 17:55:42",
      "hoursSpend":1,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf joern alex",
      "phase":"backlog",
      "comment":"Achieved: step 1: dump object diagram"
    }
  },
  {
    "id":"KE.L252",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:40:42",
      "hoursSpend":1,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf joern alex",
      "phase":"done",
      "comment":"Achieved:       shall compute to 88\n      Path classes are generated."
    }
  },
  {
    "id":"KE.L253",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf",
      "phase":"backlog",
      "comment":"Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L254",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.08.2012 23:04:42",
      "hoursSpend":4,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K248"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Feature Request (DONE): model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L255",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "hoursSpend":6,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id":"KE.K237"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"LudoModel: null"
    }
  },
  {
    "id":"KE.L257",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L258",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"18.03.2012 23:05:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 5. generate generic set for attributes and assocs"
    }
  },
  {
    "id":"KE.L259",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"22.03.2012 14:40:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 6. generate generic get for attributes and assocs"
    }
  },
  {
    "id":"KE.L260",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:32:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf joern alex",
      "phase":"implementation",
      "comment":"Achieved: 7. generate creator classes"
    }
  },
  {
    "id":"KE.L261",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:37:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 8. generate imports"
    }
  },
  {
    "id":"KE.L262",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:39:42",
      "hoursSpend":2,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 9. generate property change support"
    }
  },
  {
    "id":"KE.L263",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"26.03.2012 22:20:42",
      "hoursSpend":2,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 10. generate removeYou method"
    }
  },
  {
    "id":"KE.L264",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:59:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: Alexander Jahl has added some support for inheritance. See StudyRightExtendsReverseClassModel"
    }
  },
  {
    "id":"KE.L265",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 13:51:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: generic set now works for double. Perhabs boolean and other are still missing"
    }
  },
  {
    "id":"KE.L266",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 20:01:42",
      "hoursSpend":2,
      "kanbanEntry":{"id":"KE.K256"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Solved: one to one assoc generate code that compiles. Also solved some import problems with ModelSets"
    }
  },
  {
    "id":"KE.L267",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "hoursSpend":12,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K237"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"LudoModel: null"
    }
  },
  {
    "id":"KE.L269",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "kanbanEntry":{"id":"KE.K268"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L270",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 15:19:42",
      "hoursSpend":1,
      "kanbanEntry":{"id":"KE.K268"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: One to one assocs now work. "
    }
  },
  {
    "id":"KE.L271",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.04.2013 12:00:00",
      "hoursSpend":1,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id":"KE.K237"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"LudoModel: null"
    }
  }
]
