[
  {
    "id":"KE.K1",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L14"},
        {"id": "KE.L23"},
        {"id": "KE.L33"},
        {"id": "KE.L36"},
        {"id": "KE.L38"},
        {"id": "KE.L42"},
        {"id": "KE.L47"},
        {"id": "KE.L51"},
        {"id": "KE.L53"},
        {"id": "KE.L55"},
        {"id": "KE.L59"},
        {"id": "KE.L61"},
        {"id": "KE.L64"},
        {"id": "KE.L67"},
        {"id": "KE.L70"},
        {"id": "KE.L74"},
        {"id": "KE.L77"},
        {"id": "KE.L80"},
        {"id": "KE.L84"},
        {"id": "KE.L87"},
        {"id": "KE.L91"},
        {"id": "KE.L95"},
        {"id": "KE.L97"}
      ],
      "name":"SDMLibProject",
      "phase":"active",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":8,
      "hoursSpend":34,
      "subentries":[
        {"id": "KE.K2"},
        {"id": "KE.K11"},
        {"id": "KE.K18"},
        {"id": "KE.K45"}
      ]
    }
  },
  {
    "id":"KE.K2",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L15"},
        {"id": "KE.L24"},
        {"id": "KE.L34"},
        {"id": "KE.L37"},
        {"id": "KE.L39"},
        {"id": "KE.L43"},
        {"id": "KE.L48"},
        {"id": "KE.L52"},
        {"id": "KE.L54"},
        {"id": "KE.L56"},
        {"id": "KE.L62"},
        {"id": "KE.L65"},
        {"id": "KE.L68"},
        {"id": "KE.L71"},
        {"id": "KE.L75"},
        {"id": "KE.L78"},
        {"id": "KE.L81"},
        {"id": "KE.L85"},
        {"id": "KE.L88"},
        {"id": "KE.L92"},
        {"id": "KE.L96"},
        {"id": "KE.L98"}
      ],
      "name":"Sprint.001.Booting",
      "phase":"active",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":8,
      "hoursSpend":33,
      "parent":{"id": "KE.K1"},
      "subentries":[
        {"id": "KE.K3"},
        {"id": "KE.K4"},
        {"id": "KE.K5"},
        {"id": "KE.K6"},
        {"id": "KE.K7"},
        {"id": "KE.K8"},
        {"id": "KE.K9"},
        {"id": "KE.K10"},
        {"id": "KE.K73"}
      ]
    }
  },
  {
    "id":"KE.K3",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L13"},
        {"id": "KE.L16"}
      ],
      "name":"ScenarioInfrastructure",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":1,
      "parent":{"id": "KE.K2"}
    }
  },
  {
    "id":"KE.K4",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L25"},
        {"id": "KE.L26"},
        {"id": "KE.L27"},
        {"id": "KE.L28"},
        {"id": "KE.L29"},
        {"id": "KE.L30"},
        {"id": "KE.L31"},
        {"id": "KE.L32"},
        {"id": "KE.L40"},
        {"id": "KE.L41"},
        {"id": "KE.L44"},
        {"id": "KE.L57"},
        {"id": "KE.L58"}
      ],
      "name":"StudyRightClassesCodeGen",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":13,
      "parent":{"id": "KE.K2"}
    }
  },
  {
    "id":"KE.K5",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L21"},
        {"id": "KE.L22"},
        {"id": "KE.L49"},
        {"id": "KE.L50"},
        {"id": "KE.L63"},
        {"id": "KE.L66"}
      ],
      "name":"StudyRightObjectScenarios",
      "phase":"backlog",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":6,
      "hoursSpend":2,
      "parent":{"id": "KE.K2"},
      "files":"examples/org/sdmlib/examples/studyright/StudyRightClassesCodeGen.java"
    }
  },
  {
    "id":"KE.K6",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L17"},
        {"id": "KE.L35"}
      ],
      "name":"StudyRightReverseClassModel",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":1,
      "parent":{"id": "KE.K2"},
      "files":"examples/org/sdmlib/examples/studyright/StudyRightClassesCodeGen.java"
    }
  },
  {
    "id":"KE.K7",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"ClassModelCodeGen",
      "phase":"backlog",
      "hoursRemaining":0,
      "hoursSpend":0,
      "parent":{"id": "KE.K2"}
    }
  },
  {
    "id":"KE.K8",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L69"},
        {"id": "KE.L72"}
      ],
      "name":"GroupAccountCodegen",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":2,
      "parent":{"id": "KE.K2"},
      "files":"examples/org/sdmlib/examples/groupAccount/GroupAccountTests.java"
    }
  },
  {
    "id":"KE.K9",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L93"},
        {"id": "KE.L94"}
      ],
      "name":"GroupAccountRuleRecognition",
      "phase":"modeling",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":2,
      "hoursSpend":8,
      "parent":{"id": "KE.K2"},
      "files":"examples/org/sdmlib/examples/groupAccount/GroupAccountTests.java"
    }
  },
  {
    "id":"KE.K10",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "name":"TransformationsCodegen",
      "phase":"backlog",
      "hoursRemaining":0,
      "hoursSpend":0,
      "parent":{"id": "KE.K2"},
      "files":"test/org/sdmlib/models/transformations/TransformationsCodeGen.java"
    }
  },
  {
    "id":"KE.K11",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[{"id": "KE.L12"}],
      "name":"ProjectManagement",
      "phase":"active",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":0,
      "parent":{"id": "KE.K1"}
    }
  },
  {
    "id":"KE.K18",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L19"},
        {"id": "KE.L20"}
      ],
      "name":"StudyRightExtendsReverseClassModel",
      "phase":"backlog",
      "lastDeveloper":"ajahl",
      "hoursRemaining":0,
      "hoursSpend":0,
      "parent":{"id": "KE.K1"}
    }
  },
  {
    "id":"KE.K45",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L46"},
        {"id": "KE.L60"}
      ],
      "name":"StudyRightOneToOneAssoc",
      "phase":"done",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":1,
      "parent":{"id": "KE.K1"}
    }
  },
  {
    "id":"KE.K73",
    "class":"org.sdmlib.scenarios.KanbanEntry",
    "prop":{
      "logEntries":[
        {"id": "KE.L76"},
        {"id": "KE.L79"},
        {"id": "KE.L82"},
        {"id": "KE.L83"},
        {"id": "KE.L86"},
        {"id": "KE.L89"},
        {"id": "KE.L90"}
      ],
      "name":"GenericObjectDiagram",
      "phase":"bug",
      "lastDeveloper":"zuendorf",
      "hoursRemaining":0,
      "hoursSpend":6,
      "parent":{"id": "KE.K2"},
      "files":"test/org/sdmlib/models/objects/GenericObjectsTest.java"
    }
  },
  {
    "id":"KE.L12",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"07.05.2012 23:38:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K11"},
      "developer":"zuendorf",
      "phase":"active"
    }
  },
  {
    "id":"KE.L13",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"07.05.2012 23:36:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K3"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved:  Editing the log entries works now fine as part of the add method. "
    }
  },
  {
    "id":"KE.L14",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:22:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: ScenarioInfrastructure: Achieved: Seems that we have solved the problem with the sorting of log entries after loading. "
    }
  },
  {
    "id":"KE.L15",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:22:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"ScenarioInfrastructure: Achieved: Seems that we have solved the problem with the sorting of log entries after loading. "
    }
  },
  {
    "id":"KE.L16",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:22:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K3"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Seems that we have solved the problem with the sorting of log entries after loading. "
    }
  },
  {
    "id":"KE.L17",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"02.04.2012 14:58:18",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K6"},
      "developer":"ajahl",
      "phase":"backlog",
      "comment":"Achieved: Start situation: There are some java files. We parse them and generate a class model: "
    }
  },
  {
    "id":"KE.L19",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 12:00:00",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K18"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L20",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"02.04.2012 14:58:18",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K18"},
      "developer":"ajahl",
      "phase":"backlog",
      "comment":"Achieved: Start situation: There are some java files. We parse them and generate a class model: "
    }
  },
  {
    "id":"KE.L21",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 21:37:46",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf",
      "phase":"backlog",
      "comment":"Achieved: Start situation: use University class to build object structure"
    }
  },
  {
    "id":"KE.L22",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 14:57:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf joern alex",
      "phase":"modeling",
      "comment":"Achieved:       shall compute to 88\n      Path classes need to be generated."
    }
  },
  {
    "id":"KE.L23",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:22:42",
      "hoursSpend":8,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: ScenarioInfrastructure: Achieved: Seems that we have solved the problem with the sorting of log entries after loading. "
    }
  },
  {
    "id":"KE.L24",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:22:42",
      "hoursSpend":8,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"ScenarioInfrastructure: Achieved: Seems that we have solved the problem with the sorting of log entries after loading. "
    }
  },
  {
    "id":"KE.L25",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"18.03.2012 23:05:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 5. generate generic set for attributes and assocs"
    }
  },
  {
    "id":"KE.L26",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"22.03.2012 14:40:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 6. generate generic get for attributes and assocs"
    }
  },
  {
    "id":"KE.L27",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:32:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf joern alex",
      "phase":"implementation",
      "comment":"Achieved: 7. generate creator classes"
    }
  },
  {
    "id":"KE.L28",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:37:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 8. generate imports"
    }
  },
  {
    "id":"KE.L29",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"25.03.2012 22:39:42",
      "hoursSpend":2,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 9. generate property change support"
    }
  },
  {
    "id":"KE.L30",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"26.03.2012 22:20:42",
      "hoursSpend":2,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: 10. generate removeYou method"
    }
  },
  {
    "id":"KE.L31",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"26.03.2012 22:34:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: We need inheritance"
    }
  },
  {
    "id":"KE.L32",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"05.04.2012 12:52:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: generic set does not work for boolean and double and probably more"
    }
  },
  {
    "id":"KE.L33",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":23,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightReverseClassModel: Achieved: Bug: running the test multiple times inserts the code multiple times "
    }
  },
  {
    "id":"KE.L34",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":23,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightReverseClassModel: Achieved: Bug: running the test multiple times inserts the code multiple times "
    }
  },
  {
    "id":"KE.L35",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K6"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Bug: running the test multiple times inserts the code multiple times "
    }
  },
  {
    "id":"KE.L36",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightReverseClassModel: Achieved: Bug: running the test multiple times inserts the code multiple times "
    }
  },
  {
    "id":"KE.L37",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:39:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":19,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightReverseClassModel: Achieved: Bug: running the test multiple times inserts the code multiple times "
    }
  },
  {
    "id":"KE.L38",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:00:42",
      "hoursSpend":2,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightClassesCodeGen: Achieved: generic set now works for double. Perhabs boolean and other are still missing"
    }
  },
  {
    "id":"KE.L39",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:00:42",
      "hoursSpend":2,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightClassesCodeGen: Achieved: generic set now works for double. Perhabs boolean and other are still missing"
    }
  },
  {
    "id":"KE.L40",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 19:59:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: Alexander Jahl has added some support for inheritance. See StudyRightExtendsReverseClassModel"
    }
  },
  {
    "id":"KE.L41",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:00:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":3,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: generic set now works for double. Perhabs boolean and other are still missing"
    }
  },
  {
    "id":"KE.L42",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:01:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":3,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightClassesCodeGen: Achieved: BUG: one to one assoc generate code that does not compile."
    }
  },
  {
    "id":"KE.L43",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:01:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":3,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightClassesCodeGen: Achieved: BUG: one to one assoc generate code that does not compile."
    }
  },
  {
    "id":"KE.L44",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:01:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":3,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"bug",
      "comment":"Achieved: BUG: one to one assoc generate code that does not compile."
    }
  },
  {
    "id":"KE.L46",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 12:00:00",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K45"},
      "developer":"zuendorf",
      "phase":"backlog"
    }
  },
  {
    "id":"KE.L47",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":5,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L48",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":5,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L49",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:40:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf joern alex",
      "phase":"done",
      "comment":"Achieved:       shall compute to 88\n      Path classes are generated."
    }
  },
  {
    "id":"KE.L50",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf",
      "phase":"backlog",
      "comment":"Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L51",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":7,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L52",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":7,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L53",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":5,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L54",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 20:42:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":5,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide a navigation to any neighbors\ne.g.: ModelSet any = ModelSet.startWith(albert).getAny(); "
    }
  },
  {
    "id":"KE.L55",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 20:01:42",
      "hoursSpend":3,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightClassesCodeGen: Achieved: Solved: one to one assoc generate code that compiles. Also solved some import problems with ModelSets"
    }
  },
  {
    "id":"KE.L56",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 20:01:42",
      "hoursSpend":3,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightClassesCodeGen: Achieved: Solved: one to one assoc generate code that compiles. Also solved some import problems with ModelSets"
    }
  },
  {
    "id":"KE.L57",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"19.05.2012 13:51:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: generic set now works for double. Perhabs boolean and other are still missing"
    }
  },
  {
    "id":"KE.L58",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 20:01:42",
      "hoursSpend":2,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K4"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Solved: one to one assoc generate code that compiles. Also solved some import problems with ModelSets"
    }
  },
  {
    "id":"KE.L59",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 20:01:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightClassesCodeGen: Achieved: Solved: one to one assoc generate code that compiles. Also solved some import problems with ModelSets"
    }
  },
  {
    "id":"KE.L60",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"20.05.2012 15:19:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K45"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: One to one assocs now work. "
    }
  },
  {
    "id":"KE.L61",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 17:55:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf joern alex",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: step 1: dump object diagram"
    }
  },
  {
    "id":"KE.L62",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 17:55:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf joern alex",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: step 1: dump object diagram"
    }
  },
  {
    "id":"KE.L63",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 17:55:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf joern alex",
      "phase":"backlog",
      "comment":"Achieved: step 1: dump object diagram"
    }
  },
  {
    "id":"KE.L64",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 18:02:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L65",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 18:02:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L66",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 18:02:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K5"},
      "developer":"zuendorf",
      "phase":"backlog",
      "comment":"Achieved: Feature Request: model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L67",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 18:02:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L68",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"21.05.2012 18:02:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"StudyRightObjectScenarios: Achieved: Feature Request: model sets need to provide set methods and other methods. These methods shall be forwarded to each set member. \ne.g.: room.getNeighbors().findPath(path, motivation); "
    }
  },
  {
    "id":"KE.L69",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"04.04.2012 00:11:32",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K8"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Start situation: Nothing here yet. Generated classes"
    }
  },
  {
    "id":"KE.L70",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"24.05.2012 00:16:18",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GroupAccountCodegen: Achieved: Resolved Bug: creatorcreator class is no longer growing on each run. "
    }
  },
  {
    "id":"KE.L71",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"24.05.2012 00:16:18",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GroupAccountCodegen: Achieved: Resolved Bug: creatorcreator class is no longer growing on each run. "
    }
  },
  {
    "id":"KE.L72",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"24.05.2012 00:16:18",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K8"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Resolved Bug: creatorcreator class is no longer growing on each run. "
    }
  },
  {
    "id":"KE.L74",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"27.05.2012 15:52:45",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":11,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: Start situation: we do not yet have a class diagram but want to start with some example object models"
    }
  },
  {
    "id":"KE.L75",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"27.05.2012 15:52:45",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":11,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: Start situation: we do not yet have a class diagram but want to start with some example object models"
    }
  },
  {
    "id":"KE.L76",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"27.05.2012 15:52:45",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":5,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: Start situation: we do not yet have a class diagram but want to start with some example object models"
    }
  },
  {
    "id":"KE.L77",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:51:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: Step 6: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L78",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:51:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: Step 6: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L79",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:51:42",
      "hoursSpend":4,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Step 6: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L80",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:55:42",
      "hoursSpend":4,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":9,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L81",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:55:42",
      "hoursSpend":4,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":9,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L82",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:54:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":3,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: Step 5: generate model creation code to allow the developer to adjust e.g. attribute types and associoation cardinalities: "
    }
  },
  {
    "id":"KE.L83",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"28.05.2012 23:55:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"implementation",
      "comment":"Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L84",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 13:51:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: Step 5: generate model creation code to allow the developer to adjust e.g. attribute types and associoation cardinalities: "
    }
  },
  {
    "id":"KE.L85",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 13:51:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: Step 5: generate model creation code to allow the developer to adjust e.g. attribute types and associoation cardinalities: "
    }
  },
  {
    "id":"KE.L86",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 13:51:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Step 5: generate model creation code to allow the developer to adjust e.g. attribute types and associoation cardinalities: "
    }
  },
  {
    "id":"KE.L87",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:15:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L88",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:15:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":6,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L89",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:15:42",
      "hoursSpend":1,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"done",
      "comment":"Achieved: Step 7: derive non-generic objects from the generic objects "
    }
  },
  {
    "id":"KE.L90",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":0,
      "kanbanEntry":{"id": "KE.K73"},
      "developer":"zuendorf",
      "phase":"bug",
      "comment":"Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L91",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":8,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L92",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":8,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L93",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"04.04.2012 00:26:59",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K9"},
      "developer":"zuendorf",
      "phase":"modeling",
      "comment":"Achieved: Start situation: classes have been generated. Now create some example object structure"
    }
  },
  {
    "id":"KE.L94",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"15.04.2012 17:18:42",
      "hoursSpend":8,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":2,
      "kanbanEntry":{"id": "KE.K9"},
      "developer":"zuendorf",
      "phase":"modeling",
      "comment":"Achieved: We will call updateBalances() to compute the correct balances.\nTherefore, show updateBalances() first as code and then as a graphical model transformation operation diagram."
    }
  },
  {
    "id":"KE.L95",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L96",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":10,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L97",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K1"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"Sprint.001.Booting: GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  },
  {
    "id":"KE.L98",
    "class":"org.sdmlib.scenarios.LogEntry",
    "prop":{
      "date":"31.05.2012 15:22:42",
      "hoursSpend":0,
      "hoursRemainingInPhase":0,
      "hoursRemainingInTotal":8,
      "kanbanEntry":{"id": "KE.K2"},
      "developer":"zuendorf",
      "phase":"active",
      "comment":"GenericObjectDiagram: Achieved: BUG REPORT: if an object has a (String) attribute with name 'id', this attribute is not shown in the object diagram "
    }
  }
]
